<!DOCTYPE html> 
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>レジ打ち業務体験</title>
  <link rel="stylesheet" href="/assets/application.css">
  <style>
    /* ゲーム全体を大きく表示する */

    /* ゲームコンテナのスタイル */
    #game-container {
      width: 90%;
      max-width: 1200px;
      background-color: rgba(0, 0, 0, 0.8);
      padding: 40px;
      border-radius: 10px;
      box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
      text-align: center;
      margin-top: 188px;
      margin-bottom: 188px;
      margin-right: auto;
      margin-left: auto;
      border: 2px solid white;
    }

    /* 質問文のスタイル */
    #question {
      font-size: 24px;
      margin-bottom: 30px;
    }

    /* 選択肢のボタン */
    .choice-btn {
      display: inline-block;
      width: 45%;
      margin: 10px;
      padding: 15px;
      font-size: 18px;
      cursor: pointer;
      background-color: #007BFF;
      color: #fff;
      border: none;
      border-radius: 5px;
    }

    .choice-btn:hover {
      background-color: #0056b3;
    }

    /* ゲーム終了メッセージ */
    #end-game {
      margin-top: 50px;
      display: none;
    }

    /* お客様画像のスタイル */
    #customer-image {
      margin-top: 30px;
      width: 200px;
      height: auto;
    }

    /* 経過時間表示のスタイル */
    #elapsed-time {
      font-size: 20px;
      margin-top: 20px;
      color: white;
      display: none; /* 初期状態では非表示 */
    }

.submit-btn:hover {
    transform: scale(1.05);
}


    /* 終了時の経過時間表示 */
    #final-time {
      font-size: 20px;
      margin-top: 20px;
      color: white;
    }
  </style>
</head>
<body>
  <div id="game-container">
    <div id="question-area">
      <!-- 質問文を表示 -->
      <p id="question">質問文1</p>
      <!-- 選択肢のボタン -->
      <button class="choice-btn" onclick="checkAnswer(1)">選択肢A</button>
      <button class="choice-btn" onclick="checkAnswer(2)">選択肢B</button>
      <button class="choice-btn" onclick="checkAnswer(3)">選択肢C</button>
      <button class="choice-btn" onclick="checkAnswer(4)">選択肢D</button>
    </div>

    <!-- お客様の画像 -->
    <img id="customer-image" src="/game-img1.png" alt="お客様">

    <!-- 経過時間を表示 -->
    <div id="elapsed-time">経過時間: <span id="time-display">0</span> 秒</div>

    <!-- ありがとうございましたの選択肢 -->
    <div id="end-game">
      <p>ありがとうございました。は元気よく言いましょう</p>
<p id="final-time"></p> <!-- ストップした経過時間を表示 -->



<form id="score-form" action="/games/save_cashier_score" method="post">
  <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
  <input type="hidden" name="cashier_score" id="cashier_score">
  <button type="submit" class="submit-btn">スコアを保存</button>
</form>





      <button onclick="endGame()" class="submit-btn">終了</button>
    </div>
  </div>

<script>
  // ゲームのステップを管理
  let currentStep = 1;
  let startTime;
  let elapsedTime = 0; // 経過時間を記録する変数

  // ゲーム開始時の時間を記録
  function startTimer() {
    startTime = Date.now();
    document.getElementById("elapsed-time").style.display = "block";
    updateElapsedTime(); // 経過時間を更新
  }

  // 経過時間を更新
  function updateElapsedTime() {
    elapsedTime = Math.floor((Date.now() - startTime) / 1000); // 秒に変換
    document.getElementById("time-display").textContent = elapsedTime;
    requestAnimationFrame(updateElapsedTime); // 再帰的に更新
  }

  // 質問と選択肢を変更する
  function updateQuestion() {
    const questions = [
      { text: "お客様がレジに来ました最初の一言は？", choices: ["ポイントカードはお持ちですか？", "いらっしゃいませ！", "新発売の美容液がございます！いかがでしょうか？", "レジ袋はお付けしますか？"], correct: 2 },
      { text: "アプリでポイントカードを出してくれた。この時に注意することで正しい行動はどれ？", choices: ["画面に傷が付かないように優先的にスマホをスキャンする", "持ち時間短縮のため、商品のスキャンを最優先、その後にする", "円滑な会計のために支払方法を確認して、その後スキャン", "紙のポイントカードを持ってるか確認する"], correct: 1 },
      { text: "レジの待機列が長くなってきた…今のお客様の会計はまだ終わらない。この時に正しい行動はどれ？", choices: ["急いでいるので挨拶・確認はせず会計を進める", "待っている人が多いので早くするために商品を雑に扱う", "早さを追求するため、応援は呼ばず、無我夢中でレジを進める", "レジ待ちが3人目になった瞬間、レジ応援チャイムを鳴らす"], correct: 4 },
      { text: "会計時の言葉選びとして間違った言葉はどれ？", choices: ["1200円からお預かりいたします", "500円のお返しでございます", "お会計は1980円でございます", "お支払方法はいかがなさいますか"], correct: 1 },
      { text: "会計が終わり、お客様が帰る時にふさわしい言葉はどれ？", choices: ["キャンペーン実施中でございます！", "ありがとうございました！またお越しくださいませ！", "レジ袋はお付けしますか？", "次のお客様がいるので何も言わない"], correct: 2 }
    ];

    if (currentStep <= 5) {
      const question = questions[currentStep - 1];
      document.getElementById("question").textContent = question.text;
      const buttons = document.querySelectorAll(".choice-btn");
      buttons.forEach((btn, index) => {
        btn.textContent = question.choices[index];
        btn.onclick = () => checkAnswer(index + 1, question.correct);
      });

      // お客様画像のURLを変更
      document.getElementById("customer-image").src = `/game-img${currentStep}.png`;
    } else {
      stopTimer(); // 5回の質問が終わったらタイマーを止める
      showEndGame(); // 終了処理に移行
    }
  }

  // 正解かどうかを確認
  function checkAnswer(selected, correct) {
    if (selected === correct) {
      alert("正解です！");
      currentStep++;
      updateQuestion();
    } else {
      alert("不正解です。");
    }
  }

  // タイマーを止める
  function stopTimer() {
    // タイマーを停止する処理
    document.getElementById("elapsed-time").style.display = "none"; // 経過時間を非表示
    document.getElementById("final-time").textContent = `ストップした経過時間: ${elapsedTime} 秒`; // 経過時間を表示
    document.getElementById("cashier_score").value = elapsedTime; // elapsedTime の値をフォームに設定
  }

  // 終了メッセージを表示
  function showEndGame() {
    document.getElementById("question-area").style.display = "none";
    document.getElementById("end-game").style.display = "block";
  }

  // ゲーム終了の処理
  function endGame() {
    alert("ゲームを終了します。");
    window.location.href = "/games/game_top"; // ゲーム終了後に指定のページへ移動
  }

  // 初期化
  startTimer(); // ゲーム開始時にタイマーをスタート
  updateQuestion();
</script>

</body>
</html>
